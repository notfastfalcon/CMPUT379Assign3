#-----------------------------------------------
#	Name: Arsh Narkhede
#	ID: 1645106
#	CMPUT 379, Fall 2022
#	Assignment #3: Client-Server/Monitoring
#-----------------------------------------------

Included Files:
	> server.cpp
	> client.cpp
	> tands.cpp
	> header.h
	> client.man
	> server.man
	> Makefile
	> README

Makefile Targets:
	- all: executes the executable server and client
	- server: links all server object files and creates an executable server
	- server.o: builds the server object file
	- client: links all client object files and creates an executable client
	- client.o: builds the client object file
	- tands.o: builds the tands object file
	- manClient: makes a pdf version of man page for the client program
	- manServer: makes a pdf version of man page for the server program
	- clean: removes all executables, object files, and log files in the current directory.


Code Design:
	1. The client and server communicate using sockets. The server uses the Select() command to synchronously take work from
	multiple clients. It uses the fd_set data structure.
	2. The server timesout after 30 seconds of inactivity on any othe socket connections. To implement timeout the sockets were
	made to be non-blocking.
	3. The after the client is done reading the input it send a 'Q' indication to the server to close the connection.
	4. After the server timesout, the summary is printed out.
	5. The code compiles on the lab machine and runs with multiple machines.

Acknowledgement:
	> The Server implementation of pselect() is highly inspired from a GeeksForGeeks Code. Link: https://www.geeksforgeeks.org/socket-programming-in-cc-handling-multiple-clients-on-server-without-multi-threading/


